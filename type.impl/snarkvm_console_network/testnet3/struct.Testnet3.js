(function() {var type_impls = {
"leo_lang":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Testnet3\" class=\"impl\"><a href=\"#impl-Debug-for-Testnet3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Testnet3</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","leo_lang::cli::CurrentNetwork"],["<section id=\"impl-StructuralEq-for-Testnet3\" class=\"impl\"><a href=\"#impl-StructuralEq-for-Testnet3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for Testnet3</h3></section>","StructuralEq","leo_lang::cli::CurrentNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Testnet3\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-Testnet3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for Testnet3</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(\n    __deserializer: __D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Testnet3, &lt;__D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.193/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","leo_lang::cli::CurrentNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Testnet3\" class=\"impl\"><a href=\"#impl-Clone-for-Testnet3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Testnet3</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Testnet3</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","leo_lang::cli::CurrentNetwork"],["<section id=\"impl-Eq-for-Testnet3\" class=\"impl\"><a href=\"#impl-Eq-for-Testnet3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Testnet3</h3></section>","Eq","leo_lang::cli::CurrentNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Network-for-Testnet3\" class=\"impl\"><a href=\"#impl-Network-for-Testnet3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Network for Testnet3</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.BlockHash\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BlockHash\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">BlockHash</a> = AleoID&lt;Field&lt;Testnet3&gt;, snarkvm_console_network::::testnet3::{impl#2}::BlockHash::{constant#0}&gt;</h4></section></summary><div class=\"docblock\"><p>The block hash type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.RatificationID\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RatificationID\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RatificationID</a> = AleoID&lt;Field&lt;Testnet3&gt;, snarkvm_console_network::::testnet3::{impl#2}::RatificationID::{constant#0}&gt;</h4></section></summary><div class=\"docblock\"><p>The ratification ID type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.StateRoot\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.StateRoot\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">StateRoot</a> = AleoID&lt;Field&lt;Testnet3&gt;, snarkvm_console_network::::testnet3::{impl#2}::StateRoot::{constant#0}&gt;</h4></section></summary><div class=\"docblock\"><p>The state root type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.TransactionID\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.TransactionID\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">TransactionID</a> = AleoID&lt;Field&lt;Testnet3&gt;, snarkvm_console_network::::testnet3::{impl#2}::TransactionID::{constant#0}&gt;</h4></section></summary><div class=\"docblock\"><p>The transaction ID type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.TransitionID\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.TransitionID\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">TransitionID</a> = AleoID&lt;Field&lt;Testnet3&gt;, snarkvm_console_network::::testnet3::{impl#2}::TransitionID::{constant#0}&gt;</h4></section></summary><div class=\"docblock\"><p>The transition ID type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.EDITION\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.EDITION\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">EDITION</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a> = 0u16</h4></section></summary><div class=\"docblock\"><p>The network edition.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ID\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.ID\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">ID</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a> = 3u16</h4></section></summary><div class=\"docblock\"><p>The network ID.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.INCLUSION_FUNCTION_NAME\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.INCLUSION_FUNCTION_NAME\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">INCLUSION_FUNCTION_NAME</a>: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a> = snarkvm_parameters::testnet3::TESTNET3_INCLUSION_FUNCTION_NAME</h4></section></summary><div class=\"docblock\"><p>The function name for the inclusion circuit.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.NAME\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.NAME\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">NAME</a>: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a> = &quot;Aleo Testnet 3&quot;</h4></section></summary><div class=\"docblock\"><p>The network name.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.genesis_bytes\" class=\"method trait-impl\"><a href=\"#method.genesis_bytes\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">genesis_bytes</a>() -&gt; &amp;'static [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;&#39;static [u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the genesis block bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_credits_proving_key\" class=\"method trait-impl\"><a href=\"#method.get_credits_proving_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_credits_proving_key</a>(\n    function_name: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;'static <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;CircuitProvingKey&lt;&lt;Testnet3 as Environment&gt;::PairingCurve, VarunaHidingMode&gt;&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the proving key for the given function name in <code>credits.aleo</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_credits_verifying_key\" class=\"method trait-impl\"><a href=\"#method.get_credits_verifying_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get_credits_verifying_key</a>(\n    function_name: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;'static <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;CircuitVerifyingKey&lt;&lt;Testnet3 as Environment&gt;::PairingCurve&gt;&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the verifying key for the given function name in <code>credits.aleo</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inclusion_proving_key\" class=\"method trait-impl\"><a href=\"#method.inclusion_proving_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">inclusion_proving_key</a>(\n) -&gt; &amp;'static <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;CircuitProvingKey&lt;&lt;Testnet3 as Environment&gt;::PairingCurve, VarunaHidingMode&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the <code>proving key</code> for the inclusion circuit.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inclusion_verifying_key\" class=\"method trait-impl\"><a href=\"#method.inclusion_verifying_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">inclusion_verifying_key</a>(\n) -&gt; &amp;'static <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;CircuitVerifyingKey&lt;&lt;Testnet3 as Environment&gt;::PairingCurve&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the <code>verifying key</code> for the inclusion circuit.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.g_powers\" class=\"method trait-impl\"><a href=\"#method.g_powers\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">g_powers</a>() -&gt; &amp;'static <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Group&lt;Testnet3&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the powers of <code>G</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.g_scalar_multiply\" class=\"method trait-impl\"><a href=\"#method.g_scalar_multiply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">g_scalar_multiply</a>(scalar: &amp;Scalar&lt;Testnet3&gt;) -&gt; Group&lt;Testnet3&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the scalar multiplication on the generator <code>G</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.varuna_universal_prover\" class=\"method trait-impl\"><a href=\"#method.varuna_universal_prover\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">varuna_universal_prover</a>(\n) -&gt; &amp;'static UniversalProver&lt;&lt;Testnet3 as Environment&gt;::PairingCurve&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the Varuna universal prover.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.varuna_universal_verifier\" class=\"method trait-impl\"><a href=\"#method.varuna_universal_verifier\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">varuna_universal_verifier</a>(\n) -&gt; &amp;'static UniversalVerifier&lt;&lt;Testnet3 as Environment&gt;::PairingCurve&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the Varuna universal verifier.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.varuna_fs_parameters\" class=\"method trait-impl\"><a href=\"#method.varuna_fs_parameters\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">varuna_fs_parameters</a>(\n) -&gt; &amp;'static &lt;PoseidonSponge&lt;&lt;&lt;Testnet3 as Environment&gt;::PairingCurve as PairingEngine&gt;::Fq, 2, 1&gt; as AlgebraicSponge&lt;&lt;&lt;Testnet3 as Environment&gt;::PairingCurve as PairingEngine&gt;::Fq, 2&gt;&gt;::Parameters</h4></section></summary><div class=\"docblock\"><p>Returns the sponge parameters used for the sponge in the Varuna SNARK.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encryption_domain\" class=\"method trait-impl\"><a href=\"#method.encryption_domain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encryption_domain</a>() -&gt; Field&lt;Testnet3&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the encryption domain as a constant field element.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.graph_key_domain\" class=\"method trait-impl\"><a href=\"#method.graph_key_domain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">graph_key_domain</a>() -&gt; Field&lt;Testnet3&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the graph key domain as a constant field element.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serial_number_domain\" class=\"method trait-impl\"><a href=\"#method.serial_number_domain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">serial_number_domain</a>() -&gt; Field&lt;Testnet3&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the serial number domain as a constant field element.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.commit_bhp256\" class=\"method trait-impl\"><a href=\"#method.commit_bhp256\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">commit_bhp256</a>(\n    input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>],\n    randomizer: &amp;Scalar&lt;Testnet3&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Field&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a BHP commitment with an input hasher of 256-bits and randomizer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.commit_bhp512\" class=\"method trait-impl\"><a href=\"#method.commit_bhp512\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">commit_bhp512</a>(\n    input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>],\n    randomizer: &amp;Scalar&lt;Testnet3&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Field&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a BHP commitment with an input hasher of 512-bits and randomizer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.commit_bhp768\" class=\"method trait-impl\"><a href=\"#method.commit_bhp768\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">commit_bhp768</a>(\n    input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>],\n    randomizer: &amp;Scalar&lt;Testnet3&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Field&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a BHP commitment with an input hasher of 768-bits and randomizer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.commit_bhp1024\" class=\"method trait-impl\"><a href=\"#method.commit_bhp1024\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">commit_bhp1024</a>(\n    input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>],\n    randomizer: &amp;Scalar&lt;Testnet3&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Field&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a BHP commitment with an input hasher of 1024-bits and randomizer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.commit_ped64\" class=\"method trait-impl\"><a href=\"#method.commit_ped64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">commit_ped64</a>(\n    input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>],\n    randomizer: &amp;Scalar&lt;Testnet3&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Field&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a Pedersen commitment for the given (up to) 64-bit input and randomizer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.commit_ped128\" class=\"method trait-impl\"><a href=\"#method.commit_ped128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">commit_ped128</a>(\n    input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>],\n    randomizer: &amp;Scalar&lt;Testnet3&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Field&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a Pedersen commitment for the given (up to) 128-bit input and randomizer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.commit_to_group_bhp256\" class=\"method trait-impl\"><a href=\"#method.commit_to_group_bhp256\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">commit_to_group_bhp256</a>(\n    input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>],\n    randomizer: &amp;Scalar&lt;Testnet3&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Group&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a BHP commitment with an input hasher of 256-bits and randomizer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.commit_to_group_bhp512\" class=\"method trait-impl\"><a href=\"#method.commit_to_group_bhp512\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">commit_to_group_bhp512</a>(\n    input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>],\n    randomizer: &amp;Scalar&lt;Testnet3&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Group&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a BHP commitment with an input hasher of 512-bits and randomizer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.commit_to_group_bhp768\" class=\"method trait-impl\"><a href=\"#method.commit_to_group_bhp768\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">commit_to_group_bhp768</a>(\n    input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>],\n    randomizer: &amp;Scalar&lt;Testnet3&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Group&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a BHP commitment with an input hasher of 768-bits and randomizer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.commit_to_group_bhp1024\" class=\"method trait-impl\"><a href=\"#method.commit_to_group_bhp1024\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">commit_to_group_bhp1024</a>(\n    input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>],\n    randomizer: &amp;Scalar&lt;Testnet3&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Group&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a BHP commitment with an input hasher of 1024-bits and randomizer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.commit_to_group_ped64\" class=\"method trait-impl\"><a href=\"#method.commit_to_group_ped64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">commit_to_group_ped64</a>(\n    input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>],\n    randomizer: &amp;Scalar&lt;Testnet3&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Group&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a Pedersen commitment for the given (up to) 64-bit input and randomizer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.commit_to_group_ped128\" class=\"method trait-impl\"><a href=\"#method.commit_to_group_ped128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">commit_to_group_ped128</a>(\n    input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>],\n    randomizer: &amp;Scalar&lt;Testnet3&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Group&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a Pedersen commitment for the given (up to) 128-bit input and randomizer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_bhp256\" class=\"method trait-impl\"><a href=\"#method.hash_bhp256\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_bhp256</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Field&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the BHP hash with an input hasher of 256-bits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_bhp512\" class=\"method trait-impl\"><a href=\"#method.hash_bhp512\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_bhp512</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Field&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the BHP hash with an input hasher of 512-bits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_bhp768\" class=\"method trait-impl\"><a href=\"#method.hash_bhp768\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_bhp768</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Field&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the BHP hash with an input hasher of 768-bits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_bhp1024\" class=\"method trait-impl\"><a href=\"#method.hash_bhp1024\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_bhp1024</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Field&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the BHP hash with an input hasher of 1024-bits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_keccak256\" class=\"method trait-impl\"><a href=\"#method.hash_keccak256\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_keccak256</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the Keccak hash with a 256-bit output.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_keccak384\" class=\"method trait-impl\"><a href=\"#method.hash_keccak384\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_keccak384</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the Keccak hash with a 384-bit output.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_keccak512\" class=\"method trait-impl\"><a href=\"#method.hash_keccak512\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_keccak512</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the Keccak hash with a 512-bit output.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_ped64\" class=\"method trait-impl\"><a href=\"#method.hash_ped64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_ped64</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Field&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the Pedersen hash for a given (up to) 64-bit input.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_ped128\" class=\"method trait-impl\"><a href=\"#method.hash_ped128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_ped128</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Field&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the Pedersen hash for a given (up to) 128-bit input.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_psd2\" class=\"method trait-impl\"><a href=\"#method.hash_psd2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_psd2</a>(input: &amp;[Field&lt;Testnet3&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Field&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the Poseidon hash with an input rate of 2.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_psd4\" class=\"method trait-impl\"><a href=\"#method.hash_psd4\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_psd4</a>(input: &amp;[Field&lt;Testnet3&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Field&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the Poseidon hash with an input rate of 4.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_psd8\" class=\"method trait-impl\"><a href=\"#method.hash_psd8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_psd8</a>(input: &amp;[Field&lt;Testnet3&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Field&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the Poseidon hash with an input rate of 8.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_sha3_256\" class=\"method trait-impl\"><a href=\"#method.hash_sha3_256\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_sha3_256</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the SHA-3 hash with a 256-bit output.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_sha3_384\" class=\"method trait-impl\"><a href=\"#method.hash_sha3_384\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_sha3_384</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the SHA-3 hash with a 384-bit output.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_sha3_512\" class=\"method trait-impl\"><a href=\"#method.hash_sha3_512\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_sha3_512</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the SHA-3 hash with a 512-bit output.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_many_psd2\" class=\"method trait-impl\"><a href=\"#method.hash_many_psd2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_many_psd2</a>(\n    input: &amp;[Field&lt;Testnet3&gt;],\n    num_outputs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Field&lt;Testnet3&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the extended Poseidon hash with an input rate of 2.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_many_psd4\" class=\"method trait-impl\"><a href=\"#method.hash_many_psd4\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_many_psd4</a>(\n    input: &amp;[Field&lt;Testnet3&gt;],\n    num_outputs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Field&lt;Testnet3&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the extended Poseidon hash with an input rate of 4.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_many_psd8\" class=\"method trait-impl\"><a href=\"#method.hash_many_psd8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_many_psd8</a>(\n    input: &amp;[Field&lt;Testnet3&gt;],\n    num_outputs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a>\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Field&lt;Testnet3&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the extended Poseidon hash with an input rate of 8.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_to_group_bhp256\" class=\"method trait-impl\"><a href=\"#method.hash_to_group_bhp256\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_to_group_bhp256</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Group&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the BHP hash with an input hasher of 256-bits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_to_group_bhp512\" class=\"method trait-impl\"><a href=\"#method.hash_to_group_bhp512\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_to_group_bhp512</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Group&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the BHP hash with an input hasher of 512-bits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_to_group_bhp768\" class=\"method trait-impl\"><a href=\"#method.hash_to_group_bhp768\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_to_group_bhp768</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Group&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the BHP hash with an input hasher of 768-bits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_to_group_bhp1024\" class=\"method trait-impl\"><a href=\"#method.hash_to_group_bhp1024\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_to_group_bhp1024</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Group&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the BHP hash with an input hasher of 1024-bits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_to_group_ped64\" class=\"method trait-impl\"><a href=\"#method.hash_to_group_ped64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_to_group_ped64</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Group&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the Pedersen hash for a given (up to) 64-bit input.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_to_group_ped128\" class=\"method trait-impl\"><a href=\"#method.hash_to_group_ped128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_to_group_ped128</a>(input: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Group&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the Pedersen hash for a given (up to) 128-bit input.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_to_group_psd2\" class=\"method trait-impl\"><a href=\"#method.hash_to_group_psd2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_to_group_psd2</a>(\n    input: &amp;[Field&lt;Testnet3&gt;]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Group&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the Poseidon hash with an input rate of 2 on the affine curve.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_to_group_psd4\" class=\"method trait-impl\"><a href=\"#method.hash_to_group_psd4\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_to_group_psd4</a>(\n    input: &amp;[Field&lt;Testnet3&gt;]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Group&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the Poseidon hash with an input rate of 4 on the affine curve.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_to_group_psd8\" class=\"method trait-impl\"><a href=\"#method.hash_to_group_psd8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_to_group_psd8</a>(\n    input: &amp;[Field&lt;Testnet3&gt;]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Group&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the Poseidon hash with an input rate of 8 on the affine curve.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_to_scalar_psd2\" class=\"method trait-impl\"><a href=\"#method.hash_to_scalar_psd2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_to_scalar_psd2</a>(\n    input: &amp;[Field&lt;Testnet3&gt;]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Scalar&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the Poseidon hash with an input rate of 2 on the scalar field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_to_scalar_psd4\" class=\"method trait-impl\"><a href=\"#method.hash_to_scalar_psd4\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_to_scalar_psd4</a>(\n    input: &amp;[Field&lt;Testnet3&gt;]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Scalar&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the Poseidon hash with an input rate of 4 on the scalar field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_to_scalar_psd8\" class=\"method trait-impl\"><a href=\"#method.hash_to_scalar_psd8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">hash_to_scalar_psd8</a>(\n    input: &amp;[Field&lt;Testnet3&gt;]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Scalar&lt;Testnet3&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the Poseidon hash with an input rate of 8 on the scalar field.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merkle_tree_bhp\" class=\"method trait-impl\"><a href=\"#method.merkle_tree_bhp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">merkle_tree_bhp</a>&lt;const DEPTH: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;(\n    leaves: &amp;[<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>&gt;]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;MerkleTree&lt;Testnet3, BHP&lt;Testnet3, 8, 54&gt;, BHP&lt;Testnet3, 6, 43&gt;, DEPTH&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a Merkle tree with a BHP leaf hasher of 1024-bits and a BHP path hasher of 512-bits.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merkle_tree_psd\" class=\"method trait-impl\"><a href=\"#method.merkle_tree_psd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">merkle_tree_psd</a>&lt;const DEPTH: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;(\n    leaves: &amp;[<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Field&lt;Testnet3&gt;&gt;]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;MerkleTree&lt;Testnet3, Poseidon&lt;Testnet3, 4&gt;, Poseidon&lt;Testnet3, 2&gt;, DEPTH&gt;, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.75/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a Merkle tree with a Poseidon leaf hasher with input rate of 4 and a Poseidon path hasher with input rate of 2.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_merkle_path_bhp\" class=\"method trait-impl\"><a href=\"#method.verify_merkle_path_bhp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">verify_merkle_path_bhp</a>&lt;const DEPTH: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;(\n    path: &amp;MerklePath&lt;Testnet3, DEPTH&gt;,\n    root: &amp;Field&lt;Testnet3&gt;,\n    leaf: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the given Merkle path is valid for the given root and leaf.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_merkle_path_psd\" class=\"method trait-impl\"><a href=\"#method.verify_merkle_path_psd\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">verify_merkle_path_psd</a>&lt;const DEPTH: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u8.html\">u8</a>&gt;(\n    path: &amp;MerklePath&lt;Testnet3, DEPTH&gt;,\n    root: &amp;Field&lt;Testnet3&gt;,\n    leaf: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Field&lt;Testnet3&gt;&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the given Merkle path is valid for the given root and leaf.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.GENESIS_TIMESTAMP\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.GENESIS_TIMESTAMP\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">GENESIS_TIMESTAMP</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i64.html\">i64</a> = 1_696_118_400i64</h4></section></summary><div class='docblock'>The fixed timestamp of the genesis block.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.GENESIS_COINBASE_TARGET\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.GENESIS_COINBASE_TARGET\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">GENESIS_COINBASE_TARGET</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a> = 4_294_967_295u64</h4></section></summary><div class='docblock'>The genesis block coinbase target.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.GENESIS_PROOF_TARGET\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.GENESIS_PROOF_TARGET\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">GENESIS_PROOF_TARGET</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a> = 33_554_432u64</h4></section></summary><div class='docblock'>The genesis block proof target.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.STARTING_SUPPLY\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.STARTING_SUPPLY\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">STARTING_SUPPLY</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a> = 1_500_000_000_000_000u64</h4></section></summary><div class='docblock'>The starting supply of Aleo credits.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.DEPLOYMENT_FEE_MULTIPLIER\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.DEPLOYMENT_FEE_MULTIPLIER\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">DEPLOYMENT_FEE_MULTIPLIER</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a> = 1_000u64</h4></section></summary><div class='docblock'>The cost in microcredits per byte for the deployment transaction.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_FEE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_FEE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_FEE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a> = 1_000_000_000_000_000u64</h4></section></summary><div class='docblock'>The maximum number of microcredits that can be spent as a fee.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ANCHOR_HEIGHT\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.ANCHOR_HEIGHT\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">ANCHOR_HEIGHT</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a> = _</h4></section></summary><div class='docblock'>The anchor height, defined as the expected number of blocks to reach the coinbase target.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ANCHOR_TIME\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.ANCHOR_TIME\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">ANCHOR_TIME</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a> = 25u16</h4></section></summary><div class='docblock'>The anchor time in seconds.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BLOCK_TIME\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.BLOCK_TIME\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">BLOCK_TIME</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a> = 10u16</h4></section></summary><div class='docblock'>The expected time per block in seconds.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.COINBASE_PUZZLE_DEGREE\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.COINBASE_PUZZLE_DEGREE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">COINBASE_PUZZLE_DEGREE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a> = 8_191u32</h4></section></summary><div class='docblock'>The coinbase puzzle degree.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_SOLUTIONS\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_SOLUTIONS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_SOLUTIONS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a> = 256usize</h4></section></summary><div class='docblock'>The maximum number of solutions that can be included per block.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.NUM_BLOCKS_PER_EPOCH\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.NUM_BLOCKS_PER_EPOCH\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">NUM_BLOCKS_PER_EPOCH</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a> = _</h4></section></summary><div class='docblock'>The number of blocks per epoch.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_DATA_ENTRIES\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_DATA_ENTRIES\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_DATA_ENTRIES</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a> = 32usize</h4></section></summary><div class='docblock'>The maximum number of entries in data.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_DATA_DEPTH\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_DATA_DEPTH\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_DATA_DEPTH</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a> = 32usize</h4></section></summary><div class='docblock'>The maximum recursive depth of an entry.\nNote: This value must be strictly less than u8::MAX.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_DATA_SIZE_IN_FIELDS\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_DATA_SIZE_IN_FIELDS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_DATA_SIZE_IN_FIELDS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a> = _</h4></section></summary><div class='docblock'>The maximum number of fields in data (must not exceed u16::MAX).</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_STRUCT_ENTRIES\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MIN_STRUCT_ENTRIES\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MIN_STRUCT_ENTRIES</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a> = 1usize</h4></section></summary><div class='docblock'>The minimum number of entries in a struct.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_STRUCT_ENTRIES\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_STRUCT_ENTRIES\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_STRUCT_ENTRIES</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a> = Self::MAX_DATA_ENTRIES</h4></section></summary><div class='docblock'>The maximum number of entries in a struct.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_ARRAY_ELEMENTS\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MIN_ARRAY_ELEMENTS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MIN_ARRAY_ELEMENTS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a> = 1usize</h4></section></summary><div class='docblock'>The minimum number of elements in an array.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_ARRAY_ELEMENTS\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_ARRAY_ELEMENTS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_ARRAY_ELEMENTS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a> = Self::MAX_DATA_ENTRIES</h4></section></summary><div class='docblock'>The maximum number of elements in an array.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN_RECORD_ENTRIES\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MIN_RECORD_ENTRIES\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MIN_RECORD_ENTRIES</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a> = 1usize</h4></section></summary><div class='docblock'>The minimum number of entries in a record.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_RECORD_ENTRIES\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_RECORD_ENTRIES\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_RECORD_ENTRIES</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a> = _</h4></section></summary><div class='docblock'>The maximum number of entries in a record.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_MAPPINGS\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_MAPPINGS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_MAPPINGS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a> = 31usize</h4></section></summary><div class='docblock'>The maximum number of mappings in a program.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_FUNCTIONS\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_FUNCTIONS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_FUNCTIONS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a> = 31usize</h4></section></summary><div class='docblock'>The maximum number of functions in a program.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_OPERANDS\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_OPERANDS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_OPERANDS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a> = Self::MAX_INPUTS</h4></section></summary><div class='docblock'>The maximum number of operands in an instruction.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_INSTRUCTIONS\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_INSTRUCTIONS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_INSTRUCTIONS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a> = 65_535usize</h4></section></summary><div class='docblock'>The maximum number of instructions in a closure or function.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_COMMANDS\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_COMMANDS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_COMMANDS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a> = 65_535usize</h4></section></summary><div class='docblock'>The maximum number of commands in finalize.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_WRITES\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_WRITES\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_WRITES</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u16.html\">u16</a> = 16u16</h4></section></summary><div class='docblock'>The maximum number of write commands in finalize.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_INPUTS\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_INPUTS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_INPUTS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a> = 16usize</h4></section></summary><div class='docblock'>The maximum number of inputs per transition.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_OUTPUTS\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_OUTPUTS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_OUTPUTS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a> = 16usize</h4></section></summary><div class='docblock'>The maximum number of outputs per transition.</div></details></div></details>","Network","leo_lang::cli::CurrentNetwork"],["<section id=\"impl-StructuralPartialEq-for-Testnet3\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-Testnet3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for Testnet3</h3></section>","StructuralPartialEq","leo_lang::cli::CurrentNetwork"],["<section id=\"impl-Copy-for-Testnet3\" class=\"impl\"><a href=\"#impl-Copy-for-Testnet3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for Testnet3</h3></section>","Copy","leo_lang::cli::CurrentNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Testnet3\" class=\"impl\"><a href=\"#impl-PartialEq-for-Testnet3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Testnet3</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Testnet3) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","leo_lang::cli::CurrentNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Testnet3\" class=\"impl\"><a href=\"#impl-Serialize-for-Testnet3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for Testnet3</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(\n    &amp;self,\n    __serializer: __S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.193/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","leo_lang::cli::CurrentNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Testnet3\" class=\"impl\"><a href=\"#impl-Hash-for-Testnet3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for Testnet3</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut __H</a>)<span class=\"where fmt-newline\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</span></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","leo_lang::cli::CurrentNetwork"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Environment-for-Testnet3\" class=\"impl\"><a href=\"#impl-Environment-for-Testnet3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Environment for Testnet3</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.EDWARDS_A\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.EDWARDS_A\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">EDWARDS_A</a>: &lt;Testnet3 as Environment&gt;::Field = Console::EDWARDS_A</h4></section></summary><div class=\"docblock\"><p>The coefficient <code>A</code> of the twisted Edwards curve.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.EDWARDS_D\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.EDWARDS_D\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">EDWARDS_D</a>: &lt;Testnet3 as Environment&gt;::Field = Console::EDWARDS_D</h4></section></summary><div class=\"docblock\"><p>The coefficient <code>D</code> of the twisted Edwards curve.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MONTGOMERY_A\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MONTGOMERY_A\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MONTGOMERY_A</a>: &lt;Testnet3 as Environment&gt;::Field = Console::MONTGOMERY_A</h4></section></summary><div class=\"docblock\"><p>The coefficient <code>A</code> of the Montgomery curve.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MONTGOMERY_B\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MONTGOMERY_B\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MONTGOMERY_B</a>: &lt;Testnet3 as Environment&gt;::Field = Console::MONTGOMERY_B</h4></section></summary><div class=\"docblock\"><p>The coefficient <code>B</code> of the Montgomery curve.</p>\n</div></details><section id=\"associatedtype.Affine\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Affine\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Affine</a> = &lt;Console as Environment&gt;::Affine</h4></section><section id=\"associatedtype.BigInteger\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.BigInteger\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">BigInteger</a> = &lt;Console as Environment&gt;::BigInteger</h4></section><section id=\"associatedtype.Field\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Field\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Field</a> = &lt;Console as Environment&gt;::Field</h4></section><section id=\"associatedtype.PairingCurve\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.PairingCurve\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">PairingCurve</a> = &lt;Console as Environment&gt;::PairingCurve</h4></section><section id=\"associatedtype.Projective\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Projective\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Projective</a> = &lt;Console as Environment&gt;::Projective</h4></section><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Scalar</a> = &lt;Console as Environment&gt;::Scalar</h4></section><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX_STRING_BYTES\" class=\"associatedconstant trait-impl\"><a href=\"#associatedconstant.MAX_STRING_BYTES\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MAX_STRING_BYTES</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a> = 255u32</h4></section></summary><div class='docblock'>The maximum number of bytes allowed in a string.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.halt\" class=\"method trait-impl\"><a href=\"#method.halt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">halt</a>&lt;S, T&gt;(message: S) -&gt; T<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,</span></h4></section></summary><div class='docblock'>Halts the program from further synthesis, evaluation, and execution in the current environment.</div></details></div></details>","Environment","leo_lang::cli::CurrentNetwork"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()